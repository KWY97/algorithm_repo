- 반복과 재귀
 - 반복과 재귀는 유사한 작업을 수행할 수 있다.
 - 반복은 수행하는 작업이 완료될 때 까지 계속 반복
   - 루프 (for, while 구조)
   - 반복문은 코드를 n번 반복시킬 수 있다.
 - 재귀는 주어진 문제의 해를 구하기 위해 동일하면서 더 작은 문제의 해를 이용하는 방법
   - 하나의 큰 문제를 해결할 수 있는(해결하기 쉬운) 더 작은 문제로 쪼개고 결과들을 결합한다.
   - 재귀호출은 n 중 반복문을 만들어낼 수 있다.

 - 반복문으로는 n번 반복을 구현할 수 있고, 재귀호출로 n중 for문을 구현할 수 있다.


- 재귀를 연습하기 전, 알아야할 함수의 특징 1
 !!! 함수 호출 시, 값만 복사되는 경우(원본 값이 바뀌지 않는 경우)와 
     주소가 같이 전달되는 경우(원본 값이 바뀌는 경우) 잘 알아야 할 듯 !!! - 찾아서 공부하기

   원본 값이 바뀌지 않는 경우: int 등
   원본 값이 바뀌는 경우: list 등

   *) 얕은복사, 깊은복사, call by reference, call by value 검색해서 공부하면 된다고 함

- 재귀를 연습하기 전, 알아야할 함수의 특징 2
 !!! 함수가 끝나면, Main으로 되돌아 오는 것이 아니라, 해당 함수를 호출했던 곳으로 돌아온다. !!!

 *) 참고: 파이썬의 재귀 깊이제한은 대략 1000


- 재귀호출 공부의 시작은, 무한 재귀호출을 막는 것 부터 시작
 - 무한대로 돌아가지 않게 if를 걸고 return을 하게 하는데 이런 if문을 기저조건(base case)라고 한다.\


<강사님 팁 재귀호출 시 구조> - 이러한 구조 짜놓고 하면 편하다.
  # 기저조건 (종료조건)

  # 다음 재귀호출 전
    
  # 재귀 호출
    
  # 호출하고 돌아왔을 때


재귀 2개 이상일 때. 우선 그림 그리고 코드 보기. 코드 <-> 그림 왔다갔다 가능해야힘
- 재귀의 깊이(level, depth) == 트리의 높이

