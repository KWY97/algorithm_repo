<온라인>

문자열로 된 계산식이 주어질 때, 스택을 이용하여 이 계산식의 값을 계산할 수 있다.

문자열 수식 계산의 일반적 방법
중위 표기법: 연산자를 피연산자의 가운데 표기하는 방법 ex) A+B
후위 표기법: 연산자를 피연산자 뒤에 표기하는 방법 ex) AB+



<계산기 1>
step 1. 중위 표기법 -> step 2. 후위 표기법으로 변환 -> step 3. 후위 표기법을 스택으로 연산

step 1: 중위 표기법
 A*B-C/D

step 2: 후위 표기법으로 변환
 1. 수식의 각 연산자에 대해서 우선순위에 따라 괄호를 사용하여 다시 표현
    ((A*B) - (C/D))
 2. 각 연산자를 그에 대응하는 오른쪽 괄호의 뒤로 이동
    ((AB)*(CD)/)-
 3. 괄호 제거
    AB*CD/-

step 3: 후위 표기법을 스택으로 연산 - 수업 교재 보기
교재 10p (스택에 있을 때(isp)와 밖에 있을 때(icp) 우선순위 보기)
 토큰 하나 가져오기

 피연산자면 출력

 숫자가 높은게 우선순위가 높다
  토큰을 스택에 넣을 때는 스택 안에 있는 것(가장 위에 쌓여있는것)의 icp와 토큰의 isp를 비교
  숫자가 더 크면 (우선순위가 높으면) 그냥 넣으면 댐

 닫는괄호는 우선순위 표기가 없다
  닫는 괄호를 만나면 stack에서 여는 괄호가 나올때 까지 모두 pop() -> pop()하면 출력으로 내린다는 말로 이해하면 댈 듯
  반복하다가 여는 괄호를 만나면 여는괄호 버림

 토큰을 스택에 넣을때 숫자가 더 낮으면 넣으려고 하는 것보다 낮은 연산자를 만날 때까지 pop()
 낮은거 만나면 stack에 넣음, 낮은거 안만나면 stack이 빌때까지 하면 댐

 연습문제 1 적으면서 직접 해보고 이해하기, 그 후 스택으로 연산하는 거 직접 적어보며 이해하기



<계산기 2>
후위 표기법의 수식을 스택을 이용하여 연산하는 법

 ex) 6528-1*2/+

 위와 반대로 피연산자를 stack에 push
    6,5,2,8

 연산자를 만나면 피연산자 2개를 스택에서 pop하여 연산하고, 연산결과를 다시 스택에 push
 (pop해서 먼저 나온 피연산자가 연산자의 오른쪽, 그 다음 나온 것이 연산자의 왼쪽이 돼야함!!!)
    스택에 6,5,2,8있는데 - 만나면 2-8 = -6되고

 수식이 끝나면, 마지막으로 스택을 pop하여 출력
     다시 스택에 push하면 6,5,-6 되는 것

 쭉 하다보면 답 나옴
