<소개>

알고리즘
 - 문제를 해결하기 위한 절차나 방법 (컴퓨터가 어떤 일을 수행하기 위한 단계적 방법)

컴퓨터 분야에서 알고리즘을 표현하는 방법
 1. 의사코드(슈도코드)
 2. 순서도
-> 요즘은 상대적으로 순서도를 덜 씀

좋은 알고리즘이란
 1. 정확성
 2. 작업량 (적은 연산)
 3. 메모리 사용량 (적은 메모리)
 4. 단순성 (단순하면 디버깅이 편함)
 5. 최적성 (더 이상 개선할 것 없이 최적화되었나)

알고리즘의 작업량을 표현할 때 '시간 복잡도'로 표현함
 - 시간 복잡도
   - 실제 걸리는 시간을 측정
   - 실행되는 명령문의 개수를 계산

빅-오(O) 표기법 (Big-O Natation)
 - 시간 복잡도 함수 중에서 가장 큰 영향력을 주는 n에 대한 항만을 표시
 - 계수는 생략

*) 알고리즘 강의는 항상 온라인 때 집중하고 퇴근 전에 과제를 다 하는 걸 목표로 하라고 함
*) 노트 가져와서 필기하고 그림 그리면서 수업 듣는게 좋다.
*) 각 일차별 문제는 SWEA, Solving Club에 있음 (1w_homework에 있는거 매일 1개 씩 꼭 내야함)
*) input 파일과 sol파일 폴더 구조로 만들어서 관리하기

----------------------------------------------------------------------------------
<본 강의>

배열
 - 일정한 자료형의 변수들을 하나의 이름으로 열거하여 사용하는 자료구조
 - 배열은 실제 메모리에 순서대로 자료가 존재함
 
배열의 필요성
 - 프로그램 내에서 여러 개의 변수가 필요할 때, 일일이 다른 변수명을 이용해 자료에 접근하는 것은 매우 비효율적
 - 배열을 사용하면 하나의 선언을 통해서 둘 이상의 변수를 선언할 수 있음
 - 다수의 변수로는 하기 힘든 작업을 쉽게 할 수 있음

1차원 배열의 선언
 - 별도의 선언 방법이 없으면 변수에 처음 값 할당할 때 생성
 - 예시
    - Arr = list()
    - Arr = []
    - Arr = [1, 2, 3]
    - Arr = [0] * 10 (빈 리스트 만들고 append 하는 것 보다 이런 식으로 크기를 정해 놓는게 좋음, 연산 시간 때문)

1차원 배열의 접근
 - 예시
    - Arr[idx] = 20 (Arr의 idx번 원소에 20을 저장)

입력받은 정수를 1차원 배열에 저장하는 방법
 - 예시
   N = int(input())
   arr = list(map(int, input().split()))

   1. input() # '1 2 3 4 5'
   2. input().split() # '1' '2' '3' '4' '5'
   3. map(int, input().split()) # 1 2 3 4 5
   4. list(map(int, input().split())) # [1, 2, 3, 4, 5]

연습문제 1, 연습문제 2 해보기



정렬
 - 2개 이상의 자료를 특정 기준에 의해 작은 값부터 큰 값(오름차순), 혹은 그 반대의 순서대로(내림차순) 재배열하는 것
 - '키'란 자료를 정렬하는 기준이 되는 특정 값

버블 정렬
 - 인접한 두 개의 원소를 비교하며 자리를 계속 교환하는 방식
 - 정렬과정
    - 첫 번째 원소부터 인접한 원소끼리 계속 자리를 교환하면서 맨 마지막 자리까지 이동한다.
    - 한 단계가 끝나면 가장 큰 원소가 마지막 자리로 정렬된다.
 - 시간 복잡도
    - O(n ** 2)














































